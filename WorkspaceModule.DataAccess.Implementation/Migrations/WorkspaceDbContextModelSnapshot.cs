// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorkspaceModule.DataAccess.Implementation;

#nullable disable

namespace WorkspaceModule.DataAccess.Implementation.Migrations
{
    [DbContext(typeof(WorkspaceDbContext))]
    partial class WorkspaceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WorkspaceModule.Domain.Entities.RelationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FirstSocialNode")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SecondSocialNode")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("WorkspaceEntityId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WorkspaceEntityId");

                    b.ToTable("WorkspaceRelations");
                });

            modelBuilder.Entity("WorkspaceModule.Domain.Entities.WorkspaceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.PrimitiveCollection<Guid[]>("Events")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.PrimitiveCollection<Guid[]>("SocialNodes")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.PrimitiveCollection<Guid[]>("Tasks")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.HasKey("Id");

                    b.ToTable("Workspaces");
                });

            modelBuilder.Entity("WorkspaceModule.Domain.Entities.RelationEntity", b =>
                {
                    b.HasOne("WorkspaceModule.Domain.Entities.WorkspaceEntity", null)
                        .WithMany("Relations")
                        .HasForeignKey("WorkspaceEntityId");
                });

            modelBuilder.Entity("WorkspaceModule.Domain.Entities.WorkspaceEntity", b =>
                {
                    b.Navigation("Relations");
                });
#pragma warning restore 612, 618
        }
    }
}
