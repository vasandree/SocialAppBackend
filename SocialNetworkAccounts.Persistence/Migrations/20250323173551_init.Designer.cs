// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SocialNetworkAccounts.Persistence;

#nullable disable

namespace SocialNetworkAccounts.Persistence.Migrations
{
    [DbContext(typeof(SocialNetworkAccountsDbContext))]
    [Migration("20250323173551_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SocialNetworkAccounts.Domain.Entities.PersonsAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PersonsId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PersonsAccounts");
                });

            modelBuilder.Entity("SocialNetworkAccounts.Domain.Entities.SocialNetworkUrls", b =>
                {
                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Type");

                    b.ToTable("SocialNetworkUrls");

                    b.HasData(
                        new
                        {
                            Type = 0,
                            Url = "https://www.facebook.com/"
                        },
                        new
                        {
                            Type = 10,
                            Url = "https://github.com/"
                        },
                        new
                        {
                            Type = 3,
                            Url = "https://www.instagram.com/"
                        },
                        new
                        {
                            Type = 2,
                            Url = "https://www.linkedin.com/in/"
                        },
                        new
                        {
                            Type = 5,
                            Url = "https://www.pinterest.com/"
                        },
                        new
                        {
                            Type = 8,
                            Url = "https://www.reddit.com/user/"
                        },
                        new
                        {
                            Type = 6,
                            Url = "https://www.snapchat.com/add/"
                        },
                        new
                        {
                            Type = 11,
                            Url = "https://t.me/"
                        },
                        new
                        {
                            Type = 7,
                            Url = "https://www.tiktok.com/@"
                        },
                        new
                        {
                            Type = 12,
                            Url = "https://www.twitch.tv/"
                        },
                        new
                        {
                            Type = 1,
                            Url = "https://x.com/"
                        },
                        new
                        {
                            Type = 9,
                            Url = "https://wa.me/"
                        },
                        new
                        {
                            Type = 4,
                            Url = "https://www.youtube.com/"
                        });
                });

            modelBuilder.Entity("SocialNetworkAccounts.Domain.Entities.UsersAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UsersAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
